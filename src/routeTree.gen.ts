/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EntitiesIndexRouteImport } from './routes/entities/index'
import { Route as EntitiesNewRouteImport } from './routes/entities/new'
import { Route as EntitiesIdRouteImport } from './routes/entities/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EntitiesIndexRoute = EntitiesIndexRouteImport.update({
  id: '/entities/',
  path: '/entities/',
  getParentRoute: () => rootRouteImport,
} as any)
const EntitiesNewRoute = EntitiesNewRouteImport.update({
  id: '/entities/new',
  path: '/entities/new',
  getParentRoute: () => rootRouteImport,
} as any)
const EntitiesIdRoute = EntitiesIdRouteImport.update({
  id: '/entities/$id',
  path: '/entities/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/entities/$id': typeof EntitiesIdRoute
  '/entities/new': typeof EntitiesNewRoute
  '/entities': typeof EntitiesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/entities/$id': typeof EntitiesIdRoute
  '/entities/new': typeof EntitiesNewRoute
  '/entities': typeof EntitiesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/entities/$id': typeof EntitiesIdRoute
  '/entities/new': typeof EntitiesNewRoute
  '/entities/': typeof EntitiesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/entities/$id' | '/entities/new' | '/entities'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/entities/$id' | '/entities/new' | '/entities'
  id: '__root__' | '/' | '/entities/$id' | '/entities/new' | '/entities/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EntitiesIdRoute: typeof EntitiesIdRoute
  EntitiesNewRoute: typeof EntitiesNewRoute
  EntitiesIndexRoute: typeof EntitiesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/entities/': {
      id: '/entities/'
      path: '/entities'
      fullPath: '/entities'
      preLoaderRoute: typeof EntitiesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/entities/new': {
      id: '/entities/new'
      path: '/entities/new'
      fullPath: '/entities/new'
      preLoaderRoute: typeof EntitiesNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/entities/$id': {
      id: '/entities/$id'
      path: '/entities/$id'
      fullPath: '/entities/$id'
      preLoaderRoute: typeof EntitiesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EntitiesIdRoute: EntitiesIdRoute,
  EntitiesNewRoute: EntitiesNewRoute,
  EntitiesIndexRoute: EntitiesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
